---
const { mode = 'login' } = Astro.props;
const isLogin = mode === 'login';
---

<div class="auth-container">
  <div class="auth-header">
    <h1>{isLogin ? 'Iniciar Sesión' : 'Registrarse'}</h1>
    <p>J&L Arrendamientos</p>
  </div>

  <div id="message" class="message"></div>

  <div class="auth-form">
    <div class="form-group">
      <label>Correo electrónico</label>
      <input type="email" id="email" placeholder="tu@email.com" required>
    </div>

    <div class="form-group">
      <label>Contraseña</label>
      <input type="password" id="password" placeholder="••••••••" required>
    </div>

    <button id="submitBtn" class="btn btn-primary">
      {isLogin ? 'Iniciar Sesión' : 'Registrarse'}
    </button>
  </div>

  <div class="divider">
    <span>O continuar con</span>
  </div>

  <div class="social-buttons">
    <button id="googleBtn" class="btn-social">
      <svg viewBox="0 0 24 24" width="20" height="20">
        <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
        <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
        <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
        <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
      </svg>
      Google
    </button>

   
  </div>

  <div class="toggle-form">
    <a href={isLogin ? '/register' : '/login'}>
      {isLogin ? '¿No tienes cuenta? Regístrate' : '¿Ya tienes cuenta? Inicia sesión'}
    </a>
  </div>
</div>

<script>
  import { supabase } from '../lib/supabaseClient'

  const isLogin = document.querySelector('.auth-header h1')?.textContent === 'Iniciar Sesión'
  const email = document.getElementById('email') as HTMLInputElement
  const password = document.getElementById('password') as HTMLInputElement
  const submitBtn = document.getElementById('submitBtn') as HTMLButtonElement
  const messageDiv = document.getElementById('message') as HTMLDivElement

  function showMessage(text: string, type: 'error' | 'success') {
    messageDiv.textContent = text
    messageDiv.className = `message ${type}`
    messageDiv.style.display = 'block'
    setTimeout(() => messageDiv.style.display = 'none', 5000)
  }

  function setLoading(loading: boolean) {
    submitBtn.disabled = loading
    submitBtn.textContent = loading ? 'Cargando...' : (isLogin ? 'Iniciar Sesión' : 'Registrarse')
  }

  submitBtn.addEventListener('click', async () => {
    const emailValue = email.value.trim()
    const passwordValue = password.value

    if (!emailValue || !passwordValue) {
      showMessage('Completa todos los campos', 'error')
      return
    }

    setLoading(true)

    try {
      if (isLogin) {
        const { error } = await supabase.auth.signInWithPassword({
          email: emailValue,
          password: passwordValue
        })
        if (error) throw error
        showMessage('¡Bienvenido!', 'success')
        setTimeout(() => window.location.href = '/dashboard', 1500)
      } else {
        const { error } = await supabase.auth.signUp({
          email: emailValue,
          password: passwordValue
        })
        if (error) throw error
        showMessage('¡Registro exitoso! Revisa tu correo.', 'success')
      }
    } catch (error: any) {
      showMessage(error.message, 'error')
    } finally {
      setLoading(false)
    }
  })

  document.getElementById('googleBtn')?.addEventListener('click', async () => {
    const { error } = await supabase.auth.signInWithOAuth({
      provider: 'google',
      options: { redirectTo: `${window.location.origin}/dashboard` }
    })
    if (error) showMessage(error.message, 'error')
  })

  document.getElementById('facebookBtn')?.addEventListener('click', async () => {
    const { error } = await supabase.auth.signInWithOAuth({
      provider: 'facebook',
      options: { redirectTo: `${window.location.origin}/dashboard` }
    })
    if (error) showMessage(error.message, 'error')
  })

  password.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') submitBtn.click()
  })
</script>

<style>
  .auth-container {
    max-width: 450px;
    width: 100%;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 20px;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
    padding: 40px;
    margin: 50px auto;
  }

  .auth-header {
    text-align: center;
    margin-bottom: 30px;
  }

  .auth-header h1 {
    color: #008000;
    font-size: 28px;
    margin-bottom: 8px;
  }

  .auth-header p {
    color: #666;
    font-size: 14px;
  }

  .message {
    padding: 12px;
    border-radius: 8px;
    margin-bottom: 20px;
    display: none;
  }

  .message.error {
    background: #fee;
    color: #c33;
  }

  .message.success {
    background: #efe;
    color: #3c3;
  }

  .form-group {
    margin-bottom: 20px;
  }

  .form-group label {
    display: block;
    color: #333;
    font-weight: 600;
    margin-bottom: 8px;
    font-size: 14px;
  }

  .form-group input {
    width: 100%;
    padding: 12px 16px;
    border: 2px solid #e0e0e0;
    border-radius: 10px;
    font-size: 14px;
    transition: all 0.3s ease;
  }

  .form-group input:focus {
    outline: none;
    border-color: #008000;
    box-shadow: 0 0 0 3px rgba(0, 128, 0, 0.1);
  }

  .btn {
    width: 100%;
    padding: 14px;
    border: none;
    border-radius: 10px;
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .btn-primary {
    background: #008000;
    color: white;
  }

  .btn-primary:hover {
    background: #006600;
    transform: translateY(-2px);
  }

  .btn-primary:disabled {
    background: #ccc;
    cursor: not-allowed;
  }

  .divider {
    display: flex;
    align-items: center;
    margin: 25px 0;
    color: #999;
    font-size: 14px;
  }

  .divider::before,
  .divider::after {
    content: '';
    flex: 1;
    height: 1px;
    background: #ddd;
  }

  .divider span {
    padding: 0 15px;
  }

  .social-buttons {
  display: flex;
  justify-content: center;
}


  .btn-social {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 12px;
    border: 2px solid #e0e0e0;
    border-radius: 10px;
    background: white;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .btn-social:hover {
    border-color: #ccc;
    transform: translateY(-2px);
  }

  .btn-social svg {
    margin-right: 8px;
  }

  .toggle-form {
    text-align: center;
    margin-top: 25px;
  }

  .toggle-form a {
    color: #008000;
    font-weight: 600;
    text-decoration: none;
  }

  .toggle-form a:hover {
    text-decoration: underline;
  }
</style>